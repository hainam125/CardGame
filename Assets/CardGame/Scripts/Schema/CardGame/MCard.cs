// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CardGame
{

using global::System;
using global::FlatBuffers;

public struct MCard : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MCard GetRootAsMCard(ByteBuffer _bb) { return GetRootAsMCard(_bb, new MCard()); }
  public static MCard GetRootAsMCard(ByteBuffer _bb, MCard obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MCard __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Slot { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Hp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsPlayerCard { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsInBattle { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<MCard> CreateMCard(FlatBufferBuilder builder,
      int slot = 0,
      int id = 0,
      int hp = 0,
      bool isPlayerCard = false,
      bool isInBattle = false) {
    builder.StartObject(5);
    MCard.AddHp(builder, hp);
    MCard.AddId(builder, id);
    MCard.AddSlot(builder, slot);
    MCard.AddIsInBattle(builder, isInBattle);
    MCard.AddIsPlayerCard(builder, isPlayerCard);
    return MCard.EndMCard(builder);
  }

  public static void StartMCard(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddSlot(FlatBufferBuilder builder, int slot) { builder.AddInt(0, slot, 0); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(1, id, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(2, hp, 0); }
  public static void AddIsPlayerCard(FlatBufferBuilder builder, bool isPlayerCard) { builder.AddBool(3, isPlayerCard, false); }
  public static void AddIsInBattle(FlatBufferBuilder builder, bool isInBattle) { builder.AddBool(4, isInBattle, false); }
  public static Offset<MCard> EndMCard(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MCard>(o);
  }
};


}
